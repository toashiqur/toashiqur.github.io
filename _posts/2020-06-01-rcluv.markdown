---
title: Software Defect Prediction
subtitle: Software Defect Prediction Using RCLUV
layout: default
modal-id: 2
date: 2020-06-01
img: defect-prediction.png
thumbnail: defect-prediction-thumbnail.png
alt: image-alt
project-date: April 2019
tags: Python, TXL, R, Tensorflow, Scikit-learn, Pandas, Numpy, Matplotlib, Deep neural network, Support Vector Classifier, Decision Tree, K-nearest Neighbors, Naive Bayes, WEKA, Jupyter Notebook, Visio
description:  <div style="text-align:left;">Software defect prediction aims to find defect prone source code, and thus reduce the effort, time and cost involved with ensuring the quality of software systems. Both code and non-code metrics are commonly used in this process to train machine learning algorithms to predict software defects. Studies have shown that such metrics-based approaches are failing to give satisfactory results, and have reached a performance ceiling. </p>This project explores the idea of using code profiles as an alternative to traditional metrics to predict software defects. Unlike traditional metrics-based approaches, this project uses vectors generated by analyzing language feature use from the parse trees of source code as feature variables to train machine learning algorithms. Two benchmark bug datasets, the Eclipse bug dataset and the Github bug database, have been used to train the models. Experimental results using learning algorithms encourages us to use software code profiles as an alternative to traditional metrics to predict software defects.This code profile-based method proves to be more promising than traditional metrics-based approaches. Instructions to replicate this project is available at <a href="https://toashiqur.github.io/Defect-Prediction-Using-RCLUV/">Defect-Prediction-Using-RCLUV</a></div>
---
